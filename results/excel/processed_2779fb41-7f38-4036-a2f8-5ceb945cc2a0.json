{
  "applications": [
    {
      "app_id": "ACDA",
      "app_name": "ACDA",
      "architecture": "Microservices",
      "ports": [
        "3074",
        "3075",
        "9092",
        "3077",
        "8080",
        "3091",
        "21",
        "3093",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "443",
        "3389",
        "3006",
        "3007",
        "3008",
        "3009",
        "3010",
        "3012",
        "3013",
        "3018",
        "3019",
        "3023",
        "80",
        "8020",
        "3029",
        "3032",
        "3034",
        "1883",
        "3039",
        "3040",
        "3041",
        "3042",
        "3043",
        "3306",
        "3056",
        "3062",
        "3063",
        "3064",
        "3070",
        "3071"
      ],
      "port_count": 43,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "ALE",
      "app_name": "ALE",
      "architecture": "Microservices",
      "ports": [
        "9092",
        "3079",
        "3084",
        "3087",
        "8080",
        "3088",
        "3089",
        "21",
        "1433",
        "3098",
        "3097",
        "5672",
        "8883",
        "5432",
        "3003",
        "443",
        "3389",
        "3006",
        "3007",
        "3008",
        "3009",
        "3010",
        "3013",
        "80",
        "3024",
        "3025",
        "8020",
        "3029",
        "3028",
        "3030",
        "3034",
        "1883",
        "3038",
        "3039",
        "3043",
        "3306",
        "3055",
        "3062",
        "3063",
        "3067",
        "3068",
        "3069",
        "3071"
      ],
      "port_count": 43,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "AODSVY",
      "app_name": "AODSVY",
      "architecture": "Microservices",
      "ports": [
        "3074",
        "9092",
        "3084",
        "3086",
        "8080",
        "3090",
        "21",
        "3095",
        "1433",
        "3099",
        "5672",
        "8883",
        "5432",
        "3001",
        "3002",
        "443",
        "3389",
        "3012",
        "3014",
        "3015",
        "3016",
        "3018",
        "3019",
        "3023",
        "80",
        "3024",
        "3025",
        "3027",
        "8020",
        "3026",
        "3028",
        "3033",
        "1883",
        "3036",
        "3040",
        "3045",
        "3306",
        "3065",
        "3067",
        "3069"
      ],
      "port_count": 40,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "APSE",
      "app_name": "APSE",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "9092",
        "3078",
        "3084",
        "3085",
        "3087",
        "8080",
        "21",
        "3093",
        "1433",
        "3098",
        "5672",
        "8883",
        "5432",
        "3002",
        "443",
        "3004",
        "3389",
        "3006",
        "3009",
        "3010",
        "3021",
        "80",
        "3024",
        "8020",
        "3031",
        "3032",
        "3034",
        "1883",
        "3036",
        "3037",
        "3040",
        "3044",
        "3306",
        "3051",
        "3052",
        "3053",
        "3054",
        "3060",
        "3070",
        "3071"
      ],
      "port_count": 42,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "ARA",
      "app_name": "ARA",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "3074",
        "9092",
        "3082",
        "8080",
        "3089",
        "21",
        "3096",
        "1433",
        "5672",
        "8883",
        "5432",
        "3002",
        "443",
        "3004",
        "3389",
        "3018",
        "3022",
        "80",
        "8020",
        "3028",
        "3031",
        "3034",
        "1883",
        "3045",
        "3046",
        "3047",
        "3049",
        "3306",
        "3059",
        "3061",
        "3063",
        "3065",
        "3067",
        "3068",
        "3069"
      ],
      "port_count": 36,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "AV",
      "app_name": "AV",
      "architecture": "Microservices",
      "ports": [
        "3075",
        "9092",
        "3076",
        "3084",
        "8080",
        "3089",
        "3088",
        "3091",
        "3092",
        "21",
        "3094",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "3000",
        "443",
        "3003",
        "3389",
        "3007",
        "3009",
        "3014",
        "3023",
        "80",
        "3027",
        "8020",
        "3033",
        "3034",
        "1883",
        "3035",
        "3043",
        "3044",
        "3045",
        "3046",
        "3047",
        "3048",
        "3306",
        "3052",
        "3056",
        "3059",
        "3060",
        "3061",
        "3065",
        "3069"
      ],
      "port_count": 45,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BCA",
      "app_name": "BCA",
      "architecture": "Microservices",
      "ports": [
        "3075",
        "9092",
        "3082",
        "3083",
        "8080",
        "21",
        "3094",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "443",
        "3389",
        "3006",
        "3011",
        "3015",
        "3016",
        "3018",
        "3019",
        "3020",
        "3023",
        "80",
        "3024",
        "3026",
        "8020",
        "3029",
        "3030",
        "3031",
        "3032",
        "1883",
        "3041",
        "3043",
        "3044",
        "3045",
        "3047",
        "3050",
        "3306",
        "3052",
        "3055",
        "3061",
        "3064",
        "3065"
      ],
      "port_count": 43,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BKO",
      "app_name": "BKO",
      "architecture": "Microservices",
      "ports": [
        "9092",
        "3079",
        "3080",
        "3082",
        "3084",
        "3087",
        "8080",
        "3088",
        "3091",
        "3092",
        "21",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "443",
        "3004",
        "3389",
        "3005",
        "3014",
        "3017",
        "3018",
        "3021",
        "80",
        "8020",
        "3032",
        "1883",
        "3036",
        "3039",
        "3040",
        "3042",
        "3306",
        "3051",
        "3053",
        "3057",
        "3058",
        "3062",
        "3064",
        "3065",
        "3069",
        "3070"
      ],
      "port_count": 42,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BLND",
      "app_name": "BLND",
      "architecture": "Microservices",
      "ports": [
        "9092",
        "3080",
        "3083",
        "3086",
        "8080",
        "3089",
        "3088",
        "3091",
        "21",
        "3093",
        "3094",
        "3096",
        "1433",
        "3097",
        "3099",
        "5672",
        "8883",
        "5432",
        "3000",
        "443",
        "3389",
        "3007",
        "3017",
        "3019",
        "3020",
        "3021",
        "80",
        "3027",
        "8020",
        "3030",
        "1883",
        "3037",
        "3041",
        "3046",
        "3306",
        "3051",
        "3053",
        "3055",
        "3062",
        "3063",
        "3064",
        "3068",
        "3069"
      ],
      "port_count": 43,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BLZD",
      "app_name": "BLZD",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "9092",
        "3077",
        "3080",
        "3083",
        "8080",
        "3088",
        "3089",
        "3091",
        "21",
        "1433",
        "5672",
        "8883",
        "3000",
        "5432",
        "3002",
        "443",
        "3004",
        "3389",
        "3005",
        "3007",
        "3012",
        "3014",
        "3019",
        "80",
        "3024",
        "8020",
        "3031",
        "3033",
        "3034",
        "1883",
        "3038",
        "3041",
        "3042",
        "3044",
        "3047",
        "3306",
        "3050",
        "3058",
        "3061",
        "3066"
      ],
      "port_count": 42,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BLZE",
      "app_name": "BLZE",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "3074",
        "9092",
        "3077",
        "3078",
        "3079",
        "8080",
        "3089",
        "21",
        "3093",
        "1433",
        "5672",
        "8883",
        "5432",
        "3001",
        "443",
        "3389",
        "3006",
        "3019",
        "3023",
        "80",
        "3024",
        "3027",
        "8020",
        "3028",
        "3030",
        "3034",
        "1883",
        "3037",
        "3040",
        "3042",
        "3047",
        "3048",
        "3049",
        "3306",
        "3050",
        "3052",
        "3054",
        "3060",
        "3061",
        "3062",
        "3064",
        "3069"
      ],
      "port_count": 43,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BM",
      "app_name": "BM",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "9092",
        "3076",
        "3077",
        "3080",
        "3081",
        "3083",
        "8080",
        "3092",
        "21",
        "3093",
        "1433",
        "3098",
        "5672",
        "8883",
        "5432",
        "443",
        "3003",
        "3389",
        "3007",
        "3013",
        "3015",
        "3016",
        "3020",
        "3021",
        "3022",
        "80",
        "8020",
        "3033",
        "1883",
        "3036",
        "3038",
        "3039",
        "3042",
        "3045",
        "3046",
        "3047",
        "3048",
        "3049",
        "3306",
        "3055",
        "3058",
        "3059",
        "3062",
        "3065",
        "3068",
        "3069",
        "3070"
      ],
      "port_count": 49,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BO",
      "app_name": "BO",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "9092",
        "3078",
        "3080",
        "3082",
        "3083",
        "3085",
        "3086",
        "8080",
        "3088",
        "21",
        "3094",
        "1433",
        "3099",
        "5672",
        "8883",
        "3000",
        "5432",
        "443",
        "3004",
        "3389",
        "3005",
        "3008",
        "3010",
        "3014",
        "3019",
        "80",
        "3025",
        "3026",
        "8020",
        "3030",
        "3031",
        "3032",
        "3033",
        "1883",
        "3038",
        "3044",
        "3049",
        "3306",
        "3052",
        "3053",
        "3057",
        "3062",
        "3069"
      ],
      "port_count": 44,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BOD",
      "app_name": "BOD",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "3074",
        "9092",
        "3085",
        "3086",
        "8080",
        "21",
        "3094",
        "3096",
        "1433",
        "3097",
        "3098",
        "5672",
        "8883",
        "5432",
        "443",
        "3389",
        "3007",
        "3009",
        "3012",
        "3016",
        "3018",
        "3019",
        "3020",
        "80",
        "8020",
        "3029",
        "3028",
        "3031",
        "1883",
        "3035",
        "3036",
        "3039",
        "3047",
        "3049",
        "3306",
        "3052",
        "3053",
        "3055",
        "3056",
        "3061",
        "3062",
        "3063",
        "3065",
        "3066",
        "3067",
        "3068",
        "3069"
      ],
      "port_count": 49,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BP",
      "app_name": "BP",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3075",
        "9092",
        "3079",
        "3082",
        "3086",
        "3087",
        "8080",
        "3089",
        "21",
        "3093",
        "1433",
        "5672",
        "8883",
        "5432",
        "3001",
        "443",
        "3389",
        "3005",
        "3008",
        "3010",
        "3011",
        "3015",
        "3016",
        "3021",
        "3023",
        "80",
        "3024",
        "3027",
        "8020",
        "3029",
        "3030",
        "3033",
        "3034",
        "3035",
        "1883",
        "3043",
        "3047",
        "3049",
        "3306",
        "3057",
        "3058",
        "3061",
        "3062",
        "3065",
        "3070"
      ],
      "port_count": 46,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BTIF",
      "app_name": "BTIF",
      "architecture": "Microservices",
      "ports": [
        "9092",
        "3076",
        "3080",
        "3083",
        "3085",
        "3086",
        "3087",
        "8080",
        "3088",
        "3089",
        "21",
        "3093",
        "3095",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "3001",
        "3002",
        "443",
        "3003",
        "3389",
        "3005",
        "3011",
        "3015",
        "3016",
        "3018",
        "3019",
        "3020",
        "3021",
        "3022",
        "80",
        "3025",
        "3024",
        "8020",
        "3029",
        "3030",
        "3031",
        "3032",
        "1883",
        "3035",
        "3039",
        "3041",
        "3042",
        "3045",
        "3048",
        "3306",
        "3051",
        "3052",
        "3069"
      ],
      "port_count": 51,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BW",
      "app_name": "BW",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "3075",
        "9092",
        "3076",
        "3079",
        "3082",
        "3083",
        "3087",
        "8080",
        "3088",
        "3091",
        "3092",
        "21",
        "3095",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "443",
        "3389",
        "3009",
        "3011",
        "3012",
        "3016",
        "3019",
        "3020",
        "3023",
        "80",
        "8020",
        "3031",
        "1883",
        "3037",
        "3038",
        "3039",
        "3041",
        "3049",
        "3306",
        "3051",
        "3053",
        "3054",
        "3057",
        "3063",
        "3066",
        "3069",
        "3070"
      ],
      "port_count": 46,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "BX",
      "app_name": "BX",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "3074",
        "3075",
        "9092",
        "3081",
        "3086",
        "3087",
        "8080",
        "3090",
        "21",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "3001",
        "443",
        "3004",
        "3389",
        "3005",
        "3011",
        "3012",
        "3018",
        "3019",
        "3022",
        "3023",
        "80",
        "3026",
        "8020",
        "3032",
        "1883",
        "3039",
        "3046",
        "3047",
        "3049",
        "3306",
        "3051",
        "3054",
        "3056",
        "3058",
        "3061",
        "3065",
        "3066",
        "3071"
      ],
      "port_count": 45,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CACS",
      "app_name": "CACS",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "3074",
        "9092",
        "3077",
        "3076",
        "3080",
        "3082",
        "3085",
        "3086",
        "3087",
        "8080",
        "3091",
        "3092",
        "21",
        "3096",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "3001",
        "443",
        "3389",
        "3005",
        "3008",
        "3009",
        "3016",
        "3017",
        "3021",
        "80",
        "8020",
        "1883",
        "3042",
        "3045",
        "3046",
        "3306",
        "3051",
        "3056",
        "3058",
        "3059",
        "3062",
        "3063",
        "3064",
        "3069",
        "3070",
        "3071"
      ],
      "port_count": 46,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CAP",
      "app_name": "CAP",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3074",
        "9092",
        "3076",
        "3084",
        "3085",
        "8080",
        "3092",
        "21",
        "1433",
        "5672",
        "8883",
        "5432",
        "3001",
        "3002",
        "443",
        "3004",
        "3389",
        "3006",
        "3011",
        "3015",
        "3017",
        "3021",
        "3022",
        "3023",
        "80",
        "3024",
        "3026",
        "3027",
        "8020",
        "3030",
        "3032",
        "1883",
        "3039",
        "3041",
        "3306",
        "3052",
        "3053",
        "3057",
        "3059",
        "3060",
        "3065",
        "3066",
        "3067",
        "3069",
        "3070"
      ],
      "port_count": 46,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CCA",
      "app_name": "CCA",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3075",
        "9092",
        "3077",
        "3076",
        "3079",
        "3080",
        "3083",
        "3084",
        "3086",
        "8080",
        "3089",
        "3088",
        "3092",
        "21",
        "3095",
        "1433",
        "5672",
        "8883",
        "5432",
        "443",
        "3389",
        "3011",
        "3012",
        "3013",
        "3014",
        "3020",
        "80",
        "3025",
        "3026",
        "3027",
        "8020",
        "3028",
        "3032",
        "3034",
        "1883",
        "3036",
        "3035",
        "3041",
        "3043",
        "3306",
        "3055",
        "3056",
        "3058",
        "3064",
        "3065"
      ],
      "port_count": 46,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CCLTR",
      "app_name": "CCLTR",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "9092",
        "3077",
        "3084",
        "3085",
        "8080",
        "3090",
        "21",
        "3093",
        "3095",
        "1433",
        "3097",
        "3099",
        "5672",
        "8883",
        "5432",
        "3002",
        "443",
        "3003",
        "3389",
        "3009",
        "3014",
        "3015",
        "3019",
        "3020",
        "3023",
        "80",
        "3024",
        "8020",
        "3028",
        "3030",
        "3031",
        "1883",
        "3036",
        "3038",
        "3048",
        "3306",
        "3051",
        "3064",
        "3065",
        "3066",
        "3071"
      ],
      "port_count": 42,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CCPA",
      "app_name": "CCPA",
      "architecture": "Microservices",
      "ports": [
        "3074",
        "3075",
        "9092",
        "3077",
        "3086",
        "8080",
        "3088",
        "3091",
        "3093",
        "21",
        "3096",
        "1433",
        "5672",
        "8883",
        "5432",
        "3001",
        "3002",
        "443",
        "3389",
        "3010",
        "3011",
        "3012",
        "3013",
        "3014",
        "3015",
        "3016",
        "3017",
        "3020",
        "80",
        "3024",
        "3026",
        "8020",
        "3029",
        "3030",
        "3032",
        "1883",
        "3041",
        "3046",
        "3306",
        "3052",
        "3053",
        "3054",
        "3058",
        "3059",
        "3067",
        "3071"
      ],
      "port_count": 46,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CCS",
      "app_name": "CCS",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3075",
        "9092",
        "3077",
        "3080",
        "3082",
        "8080",
        "3088",
        "21",
        "3093",
        "3094",
        "1433",
        "3099",
        "5672",
        "8883",
        "5432",
        "3003",
        "443",
        "3389",
        "3008",
        "3009",
        "3014",
        "3016",
        "3017",
        "3020",
        "3022",
        "80",
        "3027",
        "8020",
        "3028",
        "3030",
        "3029",
        "1883",
        "3036",
        "3037",
        "3038",
        "3041",
        "3044",
        "3045",
        "3047",
        "3048",
        "3306",
        "3051",
        "3052",
        "3053",
        "3057",
        "3065",
        "3066",
        "3068",
        "3069"
      ],
      "port_count": 50,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CDSA",
      "app_name": "CDSA",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "3074",
        "9092",
        "3081",
        "3085",
        "3087",
        "8080",
        "3089",
        "3088",
        "3091",
        "21",
        "3093",
        "1433",
        "3099",
        "5672",
        "8883",
        "3000",
        "5432",
        "443",
        "3004",
        "3389",
        "3008",
        "3009",
        "3010",
        "3014",
        "3016",
        "3019",
        "3021",
        "80",
        "3028",
        "8020",
        "3031",
        "3034",
        "1883",
        "3040",
        "3045",
        "3306",
        "3054",
        "3059",
        "3060",
        "3061",
        "3063",
        "3068",
        "3070",
        "3071"
      ],
      "port_count": 46,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CIRA",
      "app_name": "CIRA",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "9092",
        "3076",
        "3080",
        "3083",
        "3085",
        "3086",
        "8080",
        "3088",
        "3089",
        "3091",
        "21",
        "3095",
        "1433",
        "3098",
        "5672",
        "8883",
        "5432",
        "3000",
        "443",
        "3389",
        "3005",
        "3011",
        "3014",
        "3015",
        "3018",
        "80",
        "3025",
        "8020",
        "3031",
        "3034",
        "1883",
        "3037",
        "3039",
        "3047",
        "3048",
        "3306",
        "3050",
        "3054",
        "3057",
        "3058",
        "3061",
        "3063",
        "3065",
        "3069"
      ],
      "port_count": 46,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CLSP",
      "app_name": "CLSP",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3074",
        "9092",
        "3076",
        "3079",
        "3083",
        "8080",
        "3090",
        "21",
        "3094",
        "3093",
        "3096",
        "1433",
        "3097",
        "3099",
        "5672",
        "8883",
        "5432",
        "443",
        "3004",
        "3389",
        "3003",
        "3008",
        "3009",
        "3011",
        "3012",
        "3024",
        "3025",
        "80",
        "3026",
        "3028",
        "8020",
        "3030",
        "3031",
        "3033",
        "3034",
        "1883",
        "3036",
        "3039",
        "3040",
        "3044",
        "3046",
        "3049",
        "3306",
        "3052",
        "3054",
        "3055",
        "3058",
        "3060",
        "3061",
        "3067",
        "3071"
      ],
      "port_count": 52,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CMAR",
      "app_name": "CMAR",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "9092",
        "3080",
        "3083",
        "8080",
        "3088",
        "21",
        "1433",
        "3097",
        "3098",
        "5672",
        "8883",
        "5432",
        "3000",
        "3002",
        "443",
        "3004",
        "3005",
        "3389",
        "3001",
        "3009",
        "3015",
        "3016",
        "3018",
        "3020",
        "3022",
        "80",
        "3024",
        "3027",
        "8020",
        "3029",
        "3028",
        "3032",
        "3033",
        "3034",
        "1883",
        "3042",
        "3045",
        "3046",
        "3306",
        "3052",
        "3054",
        "3060",
        "3061",
        "3063",
        "3064"
      ],
      "port_count": 46,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CNET",
      "app_name": "CNET",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "9092",
        "3082",
        "3085",
        "8080",
        "3089",
        "3090",
        "21",
        "1433",
        "5672",
        "8883",
        "5432",
        "443",
        "3389",
        "3006",
        "3011",
        "3013",
        "3014",
        "3015",
        "3017",
        "3022",
        "3023",
        "80",
        "3024",
        "3026",
        "8020",
        "1883",
        "3042",
        "3046",
        "3048",
        "3306",
        "3051",
        "3053",
        "3056",
        "3057",
        "3058",
        "3068"
      ],
      "port_count": 38,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CP",
      "app_name": "CP",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "9092",
        "3080",
        "3083",
        "3086",
        "8080",
        "3090",
        "21",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "3000",
        "443",
        "3003",
        "3389",
        "3013",
        "80",
        "8020",
        "3029",
        "3030",
        "1883",
        "3036",
        "3037",
        "3038",
        "3039",
        "3035",
        "3041",
        "3040",
        "3049",
        "3306",
        "3051",
        "3055",
        "3056",
        "3060",
        "3063",
        "3070"
      ],
      "port_count": 38,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CRECL",
      "app_name": "CRECL",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "9092",
        "3081",
        "3082",
        "8080",
        "3089",
        "21",
        "3095",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "3000",
        "443",
        "3389",
        "3008",
        "3010",
        "3018",
        "3020",
        "80",
        "8020",
        "3030",
        "3032",
        "3034",
        "1883",
        "3037",
        "3041",
        "3042",
        "3043",
        "3048",
        "3306",
        "3051",
        "3052",
        "3053",
        "3054",
        "3056",
        "3059",
        "3060",
        "3064",
        "3065",
        "3069"
      ],
      "port_count": 42,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CSAA",
      "app_name": "CSAA",
      "architecture": "Microservices",
      "ports": [
        "9092",
        "3079",
        "3085",
        "8080",
        "21",
        "3093",
        "1433",
        "3098",
        "5672",
        "8883",
        "5432",
        "443",
        "3005",
        "3389",
        "3007",
        "3014",
        "3016",
        "3018",
        "80",
        "3026",
        "8020",
        "3032",
        "3034",
        "1883",
        "3038",
        "3041",
        "3046",
        "3047",
        "3306",
        "3053",
        "3057",
        "3059",
        "3063",
        "3064",
        "3068"
      ],
      "port_count": 35,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CSAS",
      "app_name": "CSAS",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "9092",
        "3076",
        "3080",
        "3081",
        "8080",
        "3089",
        "21",
        "3094",
        "3095",
        "1433",
        "5672",
        "8883",
        "5432",
        "3000",
        "443",
        "3004",
        "3389",
        "3005",
        "3008",
        "3010",
        "3011",
        "3012",
        "3013",
        "3015",
        "3016",
        "3017",
        "3023",
        "80",
        "3024",
        "3026",
        "8020",
        "3030",
        "3034",
        "1883",
        "3042",
        "3048",
        "3306",
        "3050",
        "3051",
        "3053",
        "3056",
        "3061",
        "3062",
        "3067",
        "3069"
      ],
      "port_count": 47,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CT",
      "app_name": "CT",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "3074",
        "9092",
        "3078",
        "3087",
        "8080",
        "3090",
        "3091",
        "21",
        "1433",
        "3098",
        "5672",
        "8883",
        "5432",
        "3002",
        "443",
        "3004",
        "3005",
        "3389",
        "3014",
        "3016",
        "3017",
        "3018",
        "3021",
        "80",
        "3027",
        "8020",
        "3029",
        "3028",
        "3032",
        "3033",
        "3034",
        "1883",
        "3035",
        "3037",
        "3039",
        "3042",
        "3045",
        "3047",
        "3048",
        "3306",
        "3057",
        "3059",
        "3064",
        "3069"
      ],
      "port_count": 45,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CV",
      "app_name": "CV",
      "architecture": "Microservices",
      "ports": [
        "3075",
        "9092",
        "3076",
        "3079",
        "3082",
        "3083",
        "3085",
        "3086",
        "8080",
        "3089",
        "21",
        "3095",
        "3096",
        "1433",
        "3097",
        "5672",
        "8883",
        "5432",
        "3002",
        "3003",
        "443",
        "3389",
        "3005",
        "3004",
        "3008",
        "3009",
        "3010",
        "3012",
        "3015",
        "3020",
        "3021",
        "3023",
        "80",
        "3027",
        "8020",
        "3029",
        "3031",
        "3033",
        "3035",
        "1883",
        "3036",
        "3040",
        "3045",
        "3047",
        "3049",
        "3306",
        "3056",
        "3057",
        "3060",
        "3062",
        "3066",
        "3068",
        "3071"
      ],
      "port_count": 53,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "CXI",
      "app_name": "CXI",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "9092",
        "3076",
        "3081",
        "3082",
        "3084",
        "3085",
        "8080",
        "3089",
        "3091",
        "3092",
        "21",
        "3093",
        "3095",
        "3096",
        "1433",
        "3098",
        "3094",
        "5672",
        "8883",
        "5432",
        "3000",
        "3001",
        "443",
        "3389",
        "3006",
        "3009",
        "3010",
        "3020",
        "3023",
        "80",
        "3024",
        "3026",
        "8020",
        "3029",
        "1883",
        "3046",
        "3306",
        "3050",
        "3052",
        "3051",
        "3056",
        "3058",
        "3059",
        "3062",
        "3067",
        "3068",
        "3071"
      ],
      "port_count": 48,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DAD",
      "app_name": "DAD",
      "architecture": "Microservices",
      "ports": [
        "9092",
        "3080",
        "3082",
        "3083",
        "3084",
        "8080",
        "3088",
        "21",
        "3094",
        "3093",
        "1433",
        "3097",
        "3099",
        "5672",
        "8883",
        "5432",
        "3000",
        "3001",
        "443",
        "3004",
        "3389",
        "3003",
        "3007",
        "3009",
        "3010",
        "3012",
        "3018",
        "3019",
        "3021",
        "3023",
        "80",
        "3024",
        "3025",
        "8020",
        "3031",
        "1883",
        "3040",
        "3043",
        "3044",
        "3046",
        "3049",
        "3306",
        "3051",
        "3050",
        "3053",
        "3052",
        "3057",
        "3070",
        "3071"
      ],
      "port_count": 49,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DCDPP",
      "app_name": "DCDPP",
      "architecture": "Microservices",
      "ports": [
        "3074",
        "9092",
        "3079",
        "8080",
        "21",
        "3095",
        "1433",
        "5672",
        "8883",
        "5432",
        "3002",
        "443",
        "3005",
        "3389",
        "3010",
        "3011",
        "3012",
        "3014",
        "3020",
        "3022",
        "80",
        "8020",
        "3029",
        "3030",
        "3028",
        "1883",
        "3037",
        "3038",
        "3040",
        "3046",
        "3047",
        "3306",
        "3051",
        "3057",
        "3061",
        "3064",
        "3067"
      ],
      "port_count": 37,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DCIDM",
      "app_name": "DCIDM",
      "architecture": "Microservices",
      "ports": [
        "9092",
        "3076",
        "3079",
        "3080",
        "3084",
        "3087",
        "8080",
        "3088",
        "3090",
        "3091",
        "21",
        "3095",
        "1433",
        "3098",
        "3097",
        "5672",
        "8883",
        "5432",
        "443",
        "3389",
        "3006",
        "3007",
        "3008",
        "3010",
        "3014",
        "3015",
        "3019",
        "3021",
        "3022",
        "3023",
        "80",
        "3024",
        "3025",
        "8020",
        "3029",
        "3034",
        "1883",
        "3036",
        "3306",
        "3051",
        "3052",
        "3055",
        "3057",
        "3061",
        "3062",
        "3067"
      ],
      "port_count": 46,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DCIFI",
      "app_name": "DCIFI",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "3075",
        "9092",
        "3078",
        "3084",
        "3086",
        "8080",
        "3088",
        "3089",
        "3092",
        "21",
        "3094",
        "3093",
        "1433",
        "5672",
        "8883",
        "5432",
        "3001",
        "443",
        "3389",
        "3007",
        "3016",
        "3019",
        "80",
        "3024",
        "3027",
        "8020",
        "3031",
        "1883",
        "3039",
        "3040",
        "3042",
        "3045",
        "3046",
        "3047",
        "3306",
        "3053",
        "3054",
        "3055",
        "3061",
        "3062",
        "3063"
      ],
      "port_count": 42,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DG",
      "app_name": "DG",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3074",
        "9092",
        "3076",
        "3078",
        "3077",
        "3082",
        "8080",
        "3090",
        "3091",
        "21",
        "3094",
        "3093",
        "1433",
        "3098",
        "5672",
        "8883",
        "5432",
        "3001",
        "443",
        "3389",
        "3008",
        "3011",
        "3017",
        "3019",
        "3021",
        "80",
        "3024",
        "3026",
        "3027",
        "8020",
        "3029",
        "3034",
        "1883",
        "3038",
        "3041",
        "3042",
        "3049",
        "3306",
        "3053",
        "3055",
        "3056",
        "3058",
        "3060",
        "3063",
        "3068",
        "3069",
        "3071"
      ],
      "port_count": 48,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM",
      "app_name": "DM",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "9092",
        "3081",
        "3082",
        "3085",
        "3086",
        "8080",
        "3088",
        "3090",
        "3091",
        "3092",
        "21",
        "3095",
        "1433",
        "5672",
        "8883",
        "3000",
        "5432",
        "443",
        "3003",
        "3389",
        "3004",
        "3009",
        "3010",
        "3016",
        "3019",
        "3020",
        "3021",
        "3023",
        "80",
        "3027",
        "8020",
        "3030",
        "3034",
        "1883",
        "3036",
        "3041",
        "3306",
        "3052",
        "3057",
        "3067",
        "3069",
        "3070"
      ],
      "port_count": 43,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM_BAP",
      "app_name": "DM_BAP",
      "architecture": "Microservices",
      "ports": [
        "9092",
        "3079",
        "3081",
        "8080",
        "3089",
        "3090",
        "21",
        "3093",
        "3095",
        "3094",
        "1433",
        "3097",
        "3099",
        "3096",
        "5672",
        "8883",
        "5432",
        "3000",
        "3003",
        "443",
        "3389",
        "3008",
        "3009",
        "3010",
        "3012",
        "3016",
        "3017",
        "3018",
        "3019",
        "80",
        "3024",
        "8020",
        "3029",
        "3030",
        "3028",
        "1883",
        "3036",
        "3035",
        "3042",
        "3044",
        "3048",
        "3306",
        "3053",
        "3061",
        "3062",
        "3064",
        "3066"
      ],
      "port_count": 47,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM_BLZE",
      "app_name": "DM_BLZE",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3073",
        "3074",
        "3075",
        "9092",
        "8080",
        "3089",
        "3092",
        "21",
        "3094",
        "1433",
        "5672",
        "8883",
        "5432",
        "443",
        "3389",
        "3009",
        "3011",
        "3012",
        "3015",
        "3016",
        "3018",
        "3020",
        "3023",
        "80",
        "3025",
        "8020",
        "3030",
        "1883",
        "3036",
        "3037",
        "3040",
        "3042",
        "3043",
        "3047",
        "3306",
        "3050",
        "3058",
        "3060",
        "3061",
        "3062",
        "3063"
      ],
      "port_count": 42,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM_CCRMBZ",
      "app_name": "DM_CCRMBZ",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "3074",
        "9092",
        "3077",
        "8080",
        "3088",
        "3090",
        "3091",
        "21",
        "1433",
        "3097",
        "5672",
        "8883",
        "3000",
        "3001",
        "5432",
        "443",
        "3002",
        "3389",
        "3005",
        "3003",
        "3016",
        "3017",
        "3023",
        "80",
        "3027",
        "8020",
        "3029",
        "3028",
        "3033",
        "3034",
        "1883",
        "3035",
        "3036",
        "3039",
        "3040",
        "3047",
        "3048",
        "3049",
        "3306",
        "3060",
        "3061",
        "3062",
        "3067",
        "3068"
      ],
      "port_count": 45,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM_CMDAT",
      "app_name": "DM_CMDAT",
      "architecture": "Microservices",
      "ports": [
        "3072",
        "9092",
        "3076",
        "8080",
        "3089",
        "3088",
        "21",
        "1433",
        "5672",
        "8883",
        "5432",
        "3000",
        "3001",
        "443",
        "3002",
        "3389",
        "3004",
        "3007",
        "3008",
        "3009",
        "3011",
        "3013",
        "3015",
        "3016",
        "3020",
        "3021",
        "3022",
        "80",
        "3025",
        "3024",
        "3027",
        "8020",
        "3026",
        "3033",
        "1883",
        "3035",
        "3042",
        "3045",
        "3306",
        "3054",
        "3055",
        "3058",
        "3059",
        "3060",
        "3061"
      ],
      "port_count": 45,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM_CMDF",
      "app_name": "DM_CMDF",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "3074",
        "9092",
        "3083",
        "3084",
        "3086",
        "3087",
        "8080",
        "3090",
        "3091",
        "3092",
        "21",
        "3094",
        "1433",
        "3099",
        "5672",
        "8883",
        "5432",
        "3003",
        "443",
        "3389",
        "3006",
        "3009",
        "3016",
        "3022",
        "80",
        "3027",
        "8020",
        "3032",
        "1883",
        "3036",
        "3037",
        "3040",
        "3306",
        "3050",
        "3057",
        "3059",
        "3063",
        "3065",
        "3066",
        "3067",
        "3070"
      ],
      "port_count": 42,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM_CMRDB",
      "app_name": "DM_CMRDB",
      "architecture": "Microservices",
      "ports": [
        "9092",
        "3077",
        "3081",
        "3083",
        "3084",
        "3086",
        "8080",
        "3090",
        "21",
        "3094",
        "3093",
        "3096",
        "1433",
        "3098",
        "5672",
        "8883",
        "5432",
        "3000",
        "3002",
        "443",
        "3004",
        "3389",
        "3005",
        "3007",
        "3008",
        "3019",
        "80",
        "3027",
        "8020",
        "3031",
        "3032",
        "1883",
        "3035",
        "3037",
        "3036",
        "3039",
        "3042",
        "3044",
        "3046",
        "3048",
        "3306",
        "3060",
        "3061",
        "3062",
        "3063",
        "3064",
        "3065",
        "3066",
        "3069"
      ],
      "port_count": 49,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM_CMREG",
      "app_name": "DM_CMREG",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "3075",
        "9092",
        "3077",
        "3079",
        "3080",
        "3083",
        "3085",
        "3086",
        "3087",
        "8080",
        "3088",
        "3091",
        "3092",
        "21",
        "3095",
        "3096",
        "1433",
        "3098",
        "3099",
        "3097",
        "5672",
        "8883",
        "5432",
        "3000",
        "443",
        "3389",
        "3006",
        "3007",
        "3012",
        "3013",
        "3014",
        "3015",
        "3020",
        "3021",
        "80",
        "8020",
        "3028",
        "3034",
        "1883",
        "3038",
        "3039",
        "3041",
        "3042",
        "3043",
        "3049",
        "3306",
        "3050",
        "3054",
        "3056",
        "3058",
        "3060",
        "3066",
        "3070"
      ],
      "port_count": 54,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM_CORD",
      "app_name": "DM_CORD",
      "architecture": "Microservices",
      "ports": [
        "3074",
        "3075",
        "9092",
        "3078",
        "3079",
        "3083",
        "3087",
        "8080",
        "3088",
        "3090",
        "21",
        "3093",
        "3095",
        "3096",
        "3097",
        "1433",
        "3099",
        "5672",
        "8883",
        "5432",
        "3001",
        "443",
        "3389",
        "3005",
        "3006",
        "3015",
        "3017",
        "3018",
        "3019",
        "3021",
        "80",
        "3027",
        "8020",
        "3031",
        "1883",
        "3035",
        "3039",
        "3042",
        "3045",
        "3046",
        "3048",
        "3049",
        "3306",
        "3051",
        "3058",
        "3061",
        "3062",
        "3065"
      ],
      "port_count": 48,
      "flow_count": 1960,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    },
    {
      "app_id": "DM_DNCCW",
      "app_name": "DM_DNCCW",
      "architecture": "Microservices",
      "ports": [
        "3073",
        "9092",
        "3076",
        "3077",
        "3079",
        "3080",
        "3081",
        "3082",
        "3085",
        "3086",
        "8080",
        "3090",
        "3092",
        "21",
        "3093",
        "3094",
        "1433",
        "3097",
        "3099",
        "5672",
        "8883",
        "5432",
        "3000",
        "3002",
        "443",
        "3389",
        "3007",
        "3014",
        "3016",
        "3018",
        "3021",
        "80",
        "3024",
        "3026",
        "3027",
        "8020",
        "3025",
        "1883",
        "3037",
        "3038",
        "3040",
        "3043",
        "3044",
        "3045",
        "3046",
        "3048",
        "3049",
        "3306",
        "3050",
        "3054",
        "3057",
        "3058",
        "3061",
        "3064",
        "3066",
        "3069",
        "3071"
      ],
      "port_count": 57,
      "flow_count": 1961,
      "risk_level": "high",
      "confidence": 0.8999999999999999,
      "source_ips": 0,
      "dest_ips": 0,
      "archetype_details": {
        "description": "Containerized microservices architecture with service mesh",
        "characteristics": [
          "Distributed services",
          "Container-based deployment",
          "API-first design",
          "Independent scaling"
        ],
        "technologies": [
          "Docker",
          "Kubernetes",
          "Spring Boot",
          "Node.js"
        ],
        "cloud_readiness": "High",
        "modernization_effort": "Low",
        "typical_7r_strategy": "Replatform",
        "aws_services": [
          "ECS",
          "EKS",
          "Lambda",
          "API Gateway",
          "Service Mesh"
        ],
        "diagram_template": "microservices_template",
        "complexity_score": 8,
        "migration_suitability": {
          "rehost": "Good",
          "replatform": "Excellent",
          "refactor": "Good",
          "retire": "Poor",
          "retain": "Poor",
          "repurchase": "Fair",
          "relocate": "Good"
        },
        "template_info": {
          "template_file": "templates/diagrams/microservices.json",
          "visio_template": "templates/visio/microservices.vsdx",
          "components": [
            "API Gateway",
            "Service Mesh",
            "Container Registry",
            "Load Balancer"
          ],
          "connections": [
            "HTTP/HTTPS",
            "gRPC",
            "Message Queue"
          ],
          "layout": "distributed_grid"
        }
      },
      "cloud_readiness": "High",
      "modernization_effort": "Low",
      "aws_services": [
        "ECS",
        "EKS",
        "Lambda",
        "API Gateway",
        "Service Mesh"
      ]
    }
  ],
  "summary": {
    "total_applications": 51,
    "architecture_distribution": {
      "Microservices": 51
    },
    "risk_distribution": {
      "high": 51
    },
    "average_ports_per_app": 45.05882352941177,
    "total_flows": 100000
  },
  "rows_processed": 100000,
  "applications_identified": 51,
  "processing_time": 0.480447
}